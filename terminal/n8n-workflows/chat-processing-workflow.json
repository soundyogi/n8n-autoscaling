{
  "name": "Chat Message Processing with Priority Queue",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "chat-webhook",
        "responseMode": "onReceived",
        "responseData": "{ \"status\": \"queued\" }",
        "options": {}
      },
      "id": "chat-webhook",
      "name": "Chat Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [250, 300]
    },
    {
      "parameters": {
        "operation": "get",
        "table": "chat_messages",
        "limit": 1,
        "filters": {
          "conditions": [
            {
              "field": "id",
              "operation": "equals",
              "value": "={{ $json.messageId }}"
            }
          ]
        }
      },
      "id": "get-message",
      "name": "Get Chat Message",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [450, 300],
      "credentials": {
        "supabaseApi": {
          "id": "1",
          "name": "Supabase API"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "table": "chat_messages",
        "columns": "status",
        "updateKey": "id",
        "additionalFields": {}
      },
      "id": "update-processing",
      "name": "Update Status to Processing",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [650, 300],
      "credentials": {
        "supabaseApi": {
          "id": "1",
          "name": "Supabase API"
        }
      }
    },
    {
      "parameters": {
        "model": "gpt-4",
        "messages": {
          "values": [
            {
              "role": "system",
              "content": "You are a helpful trading assistant. Provide concise, accurate responses about trading signals and market analysis. Priority tier: {{ $json.tier }}"
            },
            {
              "role": "user", 
              "content": "={{ $json.message }}"
            }
          ]
        },
        "options": {
          "temperature": 0.7,
          "maxTokens": 500
        }
      },
      "id": "ai-response",
      "name": "Generate AI Response",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1,
      "position": [850, 300],
      "credentials": {
        "openAiApi": {
          "id": "3",
          "name": "OpenAI API"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "table": "chat_messages",
        "columns": "response,status,responded_at,processing_time_ms",
        "updateKey": "id",
        "additionalFields": {}
      },
      "id": "update-response",
      "name": "Update with Response",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [1050, 300],
      "credentials": {
        "supabaseApi": {
          "id": "1",
          "name": "Supabase API"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "// Priority-based delay\nconst priority = $input.first().json.priority;\nconst tier = $input.first().json.tier;\n\n// Calculate delay based on tier\nlet delayMs = 0;\nif (tier === 2) delayMs = 1000; // 1 second\nif (tier === 3) delayMs = 3000; // 3 seconds\nif (tier === 4) delayMs = 5000; // 5 seconds\n\n// Wait if needed\nif (delayMs > 0) {\n  await new Promise(resolve => setTimeout(resolve, delayMs));\n}\n\nreturn $input.all();"
      },
      "id": "priority-delay",
      "name": "Priority-based Delay",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [550, 300]
    },
    {
      "parameters": {
        "functionCode": "const startTime = Date.now();\nconst messageData = $input.first().json;\nconst aiResponse = $json.choices[0].message.content;\n\nreturn [\n  {\n    json: {\n      id: messageData.id,\n      response: aiResponse,\n      status: 'completed',\n      responded_at: new Date().toISOString(),\n      processing_time_ms: Date.now() - startTime\n    }\n  }\n];"
      },
      "id": "prepare-update",
      "name": "Prepare Update Data",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [950, 300]
    }
  ],
  "connections": {
    "chat-webhook": {
      "main": [[{"node": "get-message", "type": "main", "index": 0}]]
    },
    "get-message": {
      "main": [[{"node": "priority-delay", "type": "main", "index": 0}]]
    },
    "priority-delay": {
      "main": [[{"node": "update-processing", "type": "main", "index": 0}]]
    },
    "update-processing": {
      "main": [[{"node": "ai-response", "type": "main", "index": 0}]]
    },
    "ai-response": {
      "main": [[{"node": "prepare-update", "type": "main", "index": 0}]]
    },
    "prepare-update": {
      "main": [[{"node": "update-response", "type": "main", "index": 0}]]
    }
  },
  "active": false,
  "settings": {},
  "id": "2"
}